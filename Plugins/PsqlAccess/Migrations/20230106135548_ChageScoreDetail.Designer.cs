// <auto-generated />
using System;
using System.Collections.Generic;
using ApplicationModels.Compute;
using ApplicationModels.FinancialStatement.AlphaVantage;
using ApplicationModels.Quotes;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PsqlAccess;

#nullable disable

namespace PsqlAccess.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230106135548_ChageScoreDetail")]
    partial class ChageScoreDetail
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseSerialColumns(modelBuilder);

            modelBuilder.Entity("ApplicationModels.Compute.Compute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("Id"));

                    b.Property<List<ComputedValues>>("ComputedValues")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("Ticker")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Ticker");

                    b.ToTable("Computes");
                });

            modelBuilder.Entity("ApplicationModels.Compute.ScoreDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("Id"));

                    b.Property<bool>("Accruals")
                        .HasColumnType("boolean");

                    b.Property<bool>("AssetTurnoverRatio")
                        .HasColumnType("boolean");

                    b.Property<bool>("ChangeInCurrentRatio")
                        .HasColumnType("boolean");

                    b.Property<bool>("ChangeInLeverage")
                        .HasColumnType("boolean");

                    b.Property<bool>("ChangeInNumberOfShares")
                        .HasColumnType("boolean");

                    b.Property<bool>("IncreaseGrossMargin")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsROABetter")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("LastEarningsDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("OperatingCashFlow")
                        .HasColumnType("boolean");

                    b.Property<int>("PiotroskiComputedValue")
                        .HasColumnType("integer");

                    b.Property<bool>("ReturnOnAssets")
                        .HasColumnType("boolean");

                    b.Property<int>("SimFinRating")
                        .HasColumnType("integer");

                    b.Property<string>("Ticker")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Ticker");

                    b.ToTable("ScoreDetails");
                });

            modelBuilder.Entity("ApplicationModels.EarningsCal.EarningsCalExceptions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("Id"));

                    b.Property<string>("AdditionalNotes")
                        .HasColumnType("text");

                    b.Property<int>("Exception")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ReportingDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Ticker")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("EarningsCalExceptions");
                });

            modelBuilder.Entity("ApplicationModels.EarningsCal.EarningsCalendar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("Id"));

                    b.Property<bool>("DataObtained")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("EarningsDateYahoo")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("EarningsReadDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("RemoveDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Ticker")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("VendorEarningsDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("Ticker");

                    b.ToTable("EarningsCalendars");
                });

            modelBuilder.Entity("ApplicationModels.FinancialStatement.AlphaVantage.BalanceSheet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("Id"));

                    b.Property<List<BSReport>>("AnnualReports")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<List<BSReport>>("QuarterlyReports")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("Ticker")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Ticker");

                    b.ToTable("BalanceSheets");
                });

            modelBuilder.Entity("ApplicationModels.FinancialStatement.AlphaVantage.CashFlow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("Id"));

                    b.Property<List<CashFlowReport>>("AnnualReports")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<List<CashFlowReport>>("QuarterlyReports")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("Ticker")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Ticker");

                    b.ToTable("CashFlows");
                });

            modelBuilder.Entity("ApplicationModels.FinancialStatement.AlphaVantage.IncomeStatement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("Id"));

                    b.Property<List<IncomeReport>>("AnnualReports")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<List<IncomeReport>>("QuarterlyReports")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("Ticker")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Ticker");

                    b.ToTable("IncomeStatements");
                });

            modelBuilder.Entity("ApplicationModels.FinancialStatement.AlphaVantage.Overview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal?>("AnalystTargetPrice")
                        .HasColumnType("numeric");

                    b.Property<string>("AssetType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal?>("Beta")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("BookValue")
                        .HasColumnType("numeric");

                    b.Property<string>("CIK")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal?>("DilutedEPSTTM")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("DividendDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal?>("DividendPerShare")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("DividendYield")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("EBITDA")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("EPS")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("EVToEBITDA")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("EVToRevenue")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("ExDividendDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Exchange")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FiscalYearEnd")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal?>("ForwardAnnualDividendRate")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ForwardAnnualDividendYield")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ForwardPE")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("GrossProfitTTM")
                        .HasColumnType("numeric");

                    b.Property<string>("Industry")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastSplitDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastSplitFactor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("LatestQuarter")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal?>("MarketCapitalization")
                        .HasColumnType("numeric");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal?>("OperatingMarginTTM")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("PEGRatio")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("PERatio")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("PayoutRatio")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("PercentInsiders")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("PercentInstitutions")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("PriceToBookRatio")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("PriceToSalesRatioTTM")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ProfitMargin")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("QuarterlyEarningsGrowthYOY")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("QuarterlyRevenueGrowthYOY")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ReturnOnAssetsTTM")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ReturnOnEquityTTM")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("RevenuePerShareTTM")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("RevenueTTM")
                        .HasColumnType("numeric");

                    b.Property<string>("Sector")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal?>("SharesFloat")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("SharesOutstanding")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("SharesShort")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("SharesShortPriorMonth")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ShortPercentFloat")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ShortPercentOutstanding")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ShortRatio")
                        .HasColumnType("numeric");

                    b.Property<string>("Ticker")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal?>("TrailingPE")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("_200DayMovingAverage")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("_50DayMovingAverage")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("_52WeekHigh")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("_52WeekLow")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("Ticker");

                    b.ToTable("Overviews");
                });

            modelBuilder.Entity("ApplicationModels.FinancialStatement.FinStatements", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("Id"));

                    b.Property<float?>("Assets")
                        .HasColumnType("real");

                    b.Property<float?>("Cash")
                        .HasColumnType("real");

                    b.Property<long?>("CommonStockSharesOutstanding")
                        .HasColumnType("bigint");

                    b.Property<float?>("CurrentAssets")
                        .HasColumnType("real");

                    b.Property<float?>("CurrentLiabilities")
                        .HasColumnType("real");

                    b.Property<float?>("DividendsPaid")
                        .HasColumnType("real");

                    b.Property<float?>("Equity")
                        .HasColumnType("real");

                    b.Property<string>("FilingType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float?>("FinancingCashFlows")
                        .HasColumnType("real");

                    b.Property<float?>("InvestingCashFlows")
                        .HasColumnType("real");

                    b.Property<float?>("Liabilities")
                        .HasColumnType("real");

                    b.Property<float?>("LongTermDebt")
                        .HasColumnType("real");

                    b.Property<float?>("NetIncome")
                        .HasColumnType("real");

                    b.Property<float?>("OperatingCashFlows")
                        .HasColumnType("real");

                    b.Property<float?>("OperatingIncome")
                        .HasColumnType("real");

                    b.Property<float?>("PaymentsOfDebt")
                        .HasColumnType("real");

                    b.Property<DateTime?>("PeriodEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("PeriodStart")
                        .HasColumnType("timestamp with time zone");

                    b.Property<float?>("ProceedsFromIssuanceOfDebt")
                        .HasColumnType("real");

                    b.Property<float?>("ResearchAndDevelopmentExpense")
                        .HasColumnType("real");

                    b.Property<float?>("RetainedEarnings")
                        .HasColumnType("real");

                    b.Property<float?>("Revenue")
                        .HasColumnType("real");

                    b.Property<float?>("SellingGeneralAndAdministrativeExpense")
                        .HasColumnType("real");

                    b.Property<string>("Ticker")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Ticker");

                    b.ToTable("FinStatements");
                });

            modelBuilder.Entity("ApplicationModels.Indexes.IndexComponent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("Id"));

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ListedInIndex")
                        .HasColumnType("integer");

                    b.Property<string>("Sector")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SubSector")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Ticker")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Ticker");

                    b.ToTable("IndexComponents");
                });

            modelBuilder.Entity("ApplicationModels.Quotes.YPrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("Id"));

                    b.Property<List<CompressedQuote>>("CompressedQuotes")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("Ticker")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("Ticker");

                    b.ToTable("YPrices");
                });
#pragma warning restore 612, 618
        }
    }
}
